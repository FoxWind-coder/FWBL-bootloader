; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; common.ini
[common_flags]
    build_flags =
        -I src
        -I include
        -Os
        -flto
        -ffunction-sections
        -fdata-sections
        -Wl,--gc-sections
        -Wl,--no-wchar-size-warning
        -Wl,--no-check-sections
        -Wl,--wrap=after_build
        -D BETA
        -D RN3_BOARD
        ; -D SKIPR_BOARD
        -D SPIFLASH
        ; -D SHUI
        -D BOOTDISPLAY=MKS_TS35

        ; -D USBSERDBG
        ; -D USBD_USE_CDC
        ; -D USBCON


        ; -D DEBUG
        ; -mfloat-abi=hard
        ; -mfpu=fpv4-sp-d16
        ; -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
        ; -D USBCON
        ; -D PIO_FRAMEWORK_ARDUINO_NANOLIB_FLOAT_PRINTF
        ; -D PIO_FRAMEWORK_ARDUINO_USB_HIGHSPEED_FULLMODE
        ; -D USBD_USE_CDC
        ; -D HAL_PCD_MODULE_ENABLED
        ; -D USE_USB_HS
        ; -D USB_MANUFACTURER_STRING="\"Datalogger_8\""
        ; -D USB_PRODUCT_STRING="\"Datalogger_8_v0.6\""
        ; -D USE_USB_FS
        ; -D HAL_PCD_MODULE_ENABLED
        ; -D HAL_HCD_MODULE_ENABLED
        ; -D USBD_USE_CDC
        ; -D USBCON
        ; -include include/ifaces.h



[env:bootloader]
platform = ststm32
board = genericSTM32F407VET6
framework = arduino
lib_deps = 
	SPI
	SdFat
	LowPowerLab/SPIFlash
	TFT_eSPI

upload_protocol = stlink

build_flags =
	${common_flags.build_flags}
	-D PIO_SRC_NAMING=bootloader
	-D BOOTLOADER

; extra_scripts = pre:post_build_check.py

; board_build.ldscript = stm32f407v.ld ; linker with offset
; board_upload.offset_address = 0x0800C000
extra_scripts = post_build.py

[env:preloader]
platform = ststm32
board = genericSTM32F407VET6
framework = arduino
lib_deps = 
	SPI
	SdFat
	LowPowerLab/SPIFlash
	TFT_eSPI

upload_protocol = stlink

build_flags =
	${common_flags.build_flags}
	-D PIO_SRC_NAMING=preloader
	; -D BOOTLOADER

; extra_scripts = pre:post_build_check.py

board_build.ldscript = stm32f407v.ld ; linker with offset
board_upload.offset_address = 0x0800C000
extra_scripts = post_build.py